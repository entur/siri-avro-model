
@namespace("org.entur.avro.realtime.siri.model")
protocol PtSituationElement {

	import idl "Common.avdl";

	record PtSituationElementRecord {
		string? creationTime;
		string? participantRef;
		string? situationNumber;
		int? version;
		SourceRecord? source;
		string? versionedAtTime;
		/** Value from WorkflowStatusEnum */
		string? progress;
		array<ValidityPeriodRecord> validityPeriods = [];
		string? undefinedReason;
		/** Value from SeverityEnum */
		string? severity;
		int? priority;
		/** Value from ReportTypeEnum */
		string reportType;
		array<string> keywords = [];
		boolean? planned;
		array<TranslatedStringRecord> summaries = [];
		array<TranslatedStringRecord> descriptions = [];
		array<TranslatedStringRecord> details = [];
		array<TranslatedStringRecord> advices = [];
		array<InfoLinkRecord> infoLinks = [];
		AffectsRecord? affects;
		array<ConsequenceRecord> consequences = [];
	}

	record ConsequenceRecord {
		AdviceRecord advice;
	}

	record AdviceRecord {
		/** Value from AdviceTypeEnum */
		string adviceType;
	}


	record AffectsRecord {
		array<AffectedNetworkRecord> networks = [];
		array<AffectedStopPlaceRecord> stopPlaces = [];
		array<AffectedStopPointRecord> stopPoints = [];
		array<AffectedVehicleJourneyRecord> vehicleJourneys = [];
	}

	record AffectedNetworkRecord {
		array<AffectedOperatorRecord> affectedOperators = [];
		string? networkRef;
		/** Value from VehicleModeEnum */
		string? vehicleMode;
		/** Value from AirSubmodesEnum */
		string? airSubmode;
		/** Value from BusSubmodesEnum */
		string? busSubmode;
		/** Value from CoachSubmodesEnum */
		string? coachSubmode;
		/** Value from MetroSubmodesEnum */
		string? metroSubmode;
		/** Value from RailSubmodesEnum */
		string? railSubmode;
		/** Value from TramSubmodesEnum */
		string? tramSubmode;
		/** Value from WaterSubmodesEnum */
		string? waterSubmode;
		array<AffectedLineRecord> affectedLines = [];
		string? allLines;
	}

	record AffectedLineRecord {
		string? lineRef;
		array<AffectedRouteRecord> routes = [];
		array<AffectedSectionRecord> sections = [];
	}

	record AffectedRouteRecord {
		string? routeRef;
		StopPointsRecord? stopPoints;
		array<AffectedSectionRecord> sections = [];
	}

	record StopPointsRecord {
		boolean? affectedOnly;
		array<AffectedStopPointRecord> stopPoints = [];
	}

	record AffectedSectionRecord {
		IndirectSectionRefRecord? indirectSectionRef;
	}

	record IndirectSectionRefRecord {
		string? firstQuayRef;
		string? lastQuayRef;
	}

	record AffectedOperatorRecord {
		string? operatorRef;
		array<TranslatedStringRecord> operatorNames = [];
	}

	record AffectedStopPointRecord {
		string? stopPointRef;
		array<TranslatedStringRecord> stopPointNames = [];
		/** Value from RoutePointTypeEnum */
		array<string> stopConditions = [];
	}

	record AffectedStopPlaceRecord {
		AccessibilityAssessmentRecord? accessibilityAssessment;
		string? stopPlaceRef;
		array<TranslatedStringRecord> placeNames = [];
		AffectedComponentsRecord? affectedComponent;
	}

	record AffectedComponentsRecord {
		array<AffectedStopPlaceComponentRecord> components = [];
	}
	record AffectedStopPlaceComponentRecord {
		string? componentRef;
		/** Value from StopPlaceComponentTypeEnum */
		string? componentType;
		/** Value from AccessibilityFeatureEnum */
		string? accessFeatureType;
	}


	record AccessibilityAssessmentRecord {
		boolean? mobilityImpairedAccess;
		array<AccessibilityLimitationRecord> limitations = [];
	}

	record AccessibilityLimitationRecord {
		/** Value from AccessibilityEnum */
		string? wheelchairAccess;
		/** Value from AccessibilityEnum */
		string? stepFreeAccess;
		/** Value from AccessibilityEnum */
		string? escalatorFreeAccess;
		/** Value from AccessibilityEnum */
		string? liftFreeAccess;
	}

	record AffectedVehicleJourneyRecord {
		array<string> vehicleJourneyRefs = [];
		FramedVehicleJourneyRefRecord? framedVehicleJourneyRef;
		array<string> datedVehicleJourneyRefs = [];
		AffectedOperatorRecord? operator;
		string? lineRef;
		array<AffectedRouteRecord> routes = [];
		string? originAimedDepartureTime;
	}


	record InfoLinkRecord {
		array<TranslatedStringRecord> labels = [];
		string? uri;
	}

	record ValidityPeriodRecord {
		string? startTime;
		string? endTime;
	}

	record SourceRecord {
		/** Value from SourceTypeEnum */
		string? sourceType;
	}
}
